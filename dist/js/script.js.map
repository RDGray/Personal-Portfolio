{"version":3,"sources":["script.js"],"names":["navMenu","document","getElementById","navToggle","navClose","addEventListener","classList","add","remove","navLink","querySelectorAll","linkAction","forEach","n","skillsContent","getElementsByClassName","skillsHeader","toggleSkills","itemClass","this","parentNode","className","i","length","el","tabs","tabContents","tab","target","querySelector","dataset","tabContent","modalViews","modalBtns","modalCloses","modal","modalClick","modalBtn","modalClose","modalView","swiperPortfolio","Swiper","grabCursor","navigation","nextEl","prevEl","pagination","clickable","swiperTestimonial","autoplay","delay","disableOnInteraction","scrollbar","hide","textArea","item","textareaH","offsetHeight","event","$this","style","height","scrollHeight","sections","scrollActive","scrollY","window","pageYOffset","current","sectionHeight","sectionTop","offsetTop","sectionId","getAttribute","scrollHeader","nav","scrollUp","themeButton","darkTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","getCurrentTheme","body","contains","getCurrentIcon","toggle","setItem"],"mappings":"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","file":"script.js","sourcesContent":["//------------------Menu Elements------------------\r\nconst navMenu = document.getElementById(\"nav-menu\"),\r\n  navToggle = document.getElementById(\"nav-toggle\"),\r\n  navClose = document.getElementById(\"nav-close\");\r\n\r\n//Show Menu\r\nif (navToggle) {\r\n  navToggle.addEventListener(\"click\", () => {\r\n    navMenu.classList.add(\"show-menu\");\r\n  });\r\n}\r\n\r\n//Hide Menu\r\nif (navClose) {\r\n  navClose.addEventListener(\"click\", () => {\r\n    navMenu.classList.remove(\"show-menu\");\r\n  });\r\n}\r\n\r\n// Remove Menu when clicked on nav element Mobile\r\nconst navLink = document.querySelectorAll(\".nav__link\");\r\n\r\nfunction linkAction() {\r\n  const navMenu = document.getElementById(\"nav-menu\");\r\n  //When we click on each nav__link, we remove the show-menu class\r\n  navMenu.classList.remove(\"show-menu\");\r\n}\r\nnavLink.forEach((n) => n.addEventListener(\"click\", linkAction));\r\n\r\n//------------------Accordion skills Elements------------------\r\nconst skillsContent = document.getElementsByClassName(\"skills__content\"),\r\n  skillsHeader = document.querySelectorAll(\".skills__header\");\r\n\r\nfunction toggleSkills() {\r\n  let itemClass = this.parentNode.className;\r\n\r\n  for (let i = 0; i < skillsContent.length; i++) {\r\n    skillsContent[i].className = \"skills__content skills__close\";\r\n  }\r\n  if (itemClass === \"skills__content skills__close\") {\r\n    this.parentNode.className = \"skills__content skills__open\";\r\n  }\r\n}\r\n\r\nskillsHeader.forEach((el) => {\r\n  el.addEventListener(\"click\", toggleSkills);\r\n});\r\n\r\n//------------------Qualification tabs------------------\r\nconst tabs = document.querySelectorAll(\"[data-target]\"),\r\n  tabContents = document.querySelectorAll(\"[data-content]\");\r\n\r\ntabs.forEach((tab) => {\r\n  tab.addEventListener(\"click\", () => {\r\n    const target = document.querySelector(tab.dataset.target);\r\n\r\n    tabContents.forEach((tabContent) => {\r\n      tabContent.classList.remove(\"qualification__active\");\r\n    });\r\n    target.classList.add(\"qualification__active\");\r\n\r\n    tabs.forEach((tab) => {\r\n      tab.classList.remove(\"qualification__active\");\r\n    });\r\n    tab.classList.add(\"qualification__active\");\r\n  });\r\n});\r\n\r\n//------------------Services Modal------------------\r\nconst modalViews = document.querySelectorAll(\".services__modal\"),\r\n  modalBtns = document.querySelectorAll(\".services__button\"),\r\n  modalCloses = document.querySelectorAll(\".services__modal-close\");\r\n\r\nlet modal = function (modalClick) {\r\n  modalViews[modalClick].classList.add(\"active-modal\");\r\n};\r\n\r\nmodalBtns.forEach((modalBtn, i) => {\r\n  modalBtn.addEventListener(\"click\", () => {\r\n    modal(i);\r\n  });\r\n});\r\n\r\nmodalCloses.forEach((modalClose) => {\r\n  modalClose.addEventListener(\"click\", () => {\r\n    modalViews.forEach((modalView) => {\r\n      modalView.classList.remove(\"active-modal\");\r\n    });\r\n  });\r\n});\r\n\r\n//------------------Portfolio swiper------------------\r\n\r\nlet swiperPortfolio = new Swiper(\".portfolio__container\", {\r\n  grabCursor: true,\r\n  navigation: {\r\n    nextEl: \".swiper-button-next\",\r\n    prevEl: \".swiper-button-prev\",\r\n  },\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n    clickable: true,\r\n  },\r\n});\r\n\r\n//------------------Project swiper------------------\r\n\r\nlet swiperTestimonial = new Swiper(\".testimonial__container\", {\r\n  grabCursor: true,\r\n\r\n  autoplay: {\r\n    delay: 5500,\r\n    disableOnInteraction: true,\r\n  },\r\n\r\n  scrollbar: {\r\n    el: \".swiper-scrollbar\",\r\n    hide: true,\r\n  },\r\n  // breakpoints: {\r\n  //  568: {\r\n  //    slidesPerView: 2,\r\n  //   },\r\n  //},\r\n});\r\n\r\n//--------------------------Autoscroll for text area--------------------------\r\nconst textArea = document.querySelectorAll(\"[data-autoresize]\");\r\n\r\ntextArea.forEach((item) => {\r\n  let textareaH = item.offsetHeight;\r\n\r\n  item.addEventListener(\"input\", (event) => {\r\n    let $this = event.target;\r\n\r\n    $this.style.height = textareaH + \"px\";\r\n    $this.style.height = $this.scrollHeight + \"px\";\r\n  });\r\n});\r\n\r\n//--------------------------Active section scroll--------------------------\r\n\r\nconst sections = document.querySelectorAll(\"section[id]\");\r\n\r\nfunction scrollActive() {\r\n  const scrollY = window.pageYOffset;\r\n\r\n  sections.forEach((current) => {\r\n    const sectionHeight = current.offsetHeight;\r\n    const sectionTop = current.offsetTop - 50;\r\n    let sectionId = current.getAttribute(\"id\");\r\n\r\n    if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {\r\n      document\r\n        .querySelector(\".nav__menu a[href*=\" + sectionId + \"]\")\r\n        .classList.add(\"active-link\");\r\n    } else {\r\n      document\r\n        .querySelector(\".nav__menu a[href*=\" + sectionId + \"]\")\r\n        .classList.remove(\"active-link\");\r\n    }\r\n  });\r\n}\r\nwindow.addEventListener(\"scroll\", scrollActive);\r\n\r\n//--------------------------Change background header when scrolling away from the header--------------------------\r\n\r\nfunction scrollHeader() {\r\n  const nav = document.getElementById(\"header\");\r\n  // When the scroll is greater than 200 viewport height, add the scroll-header class to the header tag\r\n  if (this.scrollY >= 80) nav.classList.add(\"scroll-header\");\r\n  else nav.classList.remove(\"scroll-header\");\r\n}\r\nwindow.addEventListener(\"scroll\", scrollHeader);\r\n\r\n//--------------------------Wrap button appear!--------------------------\r\nfunction scrollUp() {\r\n  const scrollUp = document.getElementById(\"scroll-up\");\r\n  // When the scroll is higher than 560 viewport height, add the show-scroll class to the a tag with the scroll-top class\r\n  if (this.scrollY >= 560) scrollUp.classList.add(\"show-scroll\");\r\n  else scrollUp.classList.remove(\"show-scroll\");\r\n}\r\nwindow.addEventListener(\"scroll\", scrollUp);\r\n\r\n//--------------------------Light/Dark Toggle--------------------------\r\nconst themeButton = document.getElementById(\"theme-button\");\r\nconst darkTheme = \"dark-theme\";\r\nconst iconTheme = \"uil-sun\";\r\n\r\n// Previously selected topic (if user selected)\r\nconst selectedTheme = localStorage.getItem(\"selected-theme\");\r\nconst selectedIcon = localStorage.getItem(\"selected-icon\");\r\n\r\n// We obtain the current theme that the interface has by validating the dark-theme class\r\nconst getCurrentTheme = () =>\r\n  document.body.classList.contains(darkTheme) ? \"dark\" : \"light\";\r\nconst getCurrentIcon = () =>\r\n  themeButton.classList.contains(iconTheme) ? \"uil-moon\" : \"uil-sun\";\r\n\r\n// We validate if the user previously chose a topic\r\nif (selectedTheme) {\r\n  // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark theme\r\n  document.body.classList[selectedTheme === \"dark\" ? \"add\" : \"remove\"](\r\n    darkTheme\r\n  );\r\n  themeButton.classList[selectedIcon === \"uil-moon\" ? \"add\" : \"remove\"](\r\n    iconTheme\r\n  );\r\n}\r\n\r\n// Activate / deactivate the theme manually with the button\r\nthemeButton.addEventListener(\"click\", () => {\r\n  // Add or remove the dark / icon theme\r\n  document.body.classList.toggle(darkTheme);\r\n  themeButton.classList.toggle(iconTheme);\r\n  // We save the theme and the current icon that the user chose\r\n  localStorage.setItem(\"selected-theme\", getCurrentTheme());\r\n  localStorage.setItem(\"selected-icon\", getCurrentIcon());\r\n});\r\n"]}